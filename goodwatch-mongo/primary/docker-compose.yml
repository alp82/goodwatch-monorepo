version: "3.8"

services:
  mongo:
    container_name: mongo
    hostname: mongo
    image: mongo:8
    network_mode: "host"
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASS}
      - MONGO_INITDB_DATABASE=goodwatch
    ports:
      - "28017:28017"
    volumes:
      - mongodb:/data/db
      - ./mongodb-keyfile:/data/mongodb-keyfile
    healthcheck:
      test: ["CMD-SHELL", "mongosh --port 28017 --eval 'db.runCommand(\"ping\").ok' --quiet"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
    command: >
      --replSet rs0 
      --bind_ip_all 
      --port 28017 
      --keyFile /data/mongodb-keyfile 

  mongoinit:
    container_name: mongoinit
    image: mongo:8
    restart: no
    depends_on:
      mongo:
        condition: service_healthy
    command: >
      bash -c "
        set -e
      
        echo '--- Mongo is ready. Initiating single-node replica set...'
        mongosh --host mongo --port 28017 -u admin -p \"${MONGO_ADMIN_PASS}\" --authenticationDatabase admin --eval '
          rs.initiate({
            _id: \"rs0\",
            members: [{ _id: 0, host: \"10.0.0.17:28017\" }]
          });
        '
      
        echo '--- Waiting 5 seconds for replica set to stabilize...'
        sleep 5
      
        echo '--- Waiting for node to become PRIMARY...'
        until mongosh --host mongo --port 28017 -u admin -p \"${MONGO_ADMIN_PASS}\" --authenticationDatabase admin --eval 'rs.isMaster().ismaster' | grep -q true; do
            echo 'Still waiting for PRIMARY status...'
            sleep 2
        done
      
        echo '--- PRIMARY status achieved. Adding secondary nodes to the replica set...'
        mongosh --host mongo --port 28017 -u admin -p \"${MONGO_ADMIN_PASS}\" --authenticationDatabase admin --eval '
          rs.add(\"10.0.0.18:28017\");
          rs.add(\"10.0.0.19:28017\");
        '
      
        echo '--- Creating application user...'
        mongosh --host mongo --port 28017 -u admin -p \"${MONGO_ADMIN_PASS}\" --authenticationDatabase admin --eval '
          db.getSiblingDB(\"goodwatch\").createUser({
            user: \"goodwatch\",
            pwd: \"${MONGO_GOODWATCH_PASS}\",
            roles: [
              { role: \"readWrite\", db: \"goodwatch\" },
              { role: \"dbAdmin\", db: \"goodwatch\" }
            ]
          });
        '
      
        echo 'âœ… SUCCESS! Replica set is fully configured and user is created.'
      "

volumes:
  mongodb:
