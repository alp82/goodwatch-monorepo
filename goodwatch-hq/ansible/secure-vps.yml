---
- name: Security Audit
  hosts: all
  become: yes
  gather_facts: yes
  vars:
    checks:
      os_check: false
      dependencies: false
      ufw: false
      ssh: false
      non_root: false
      upgrades: false
      fail2ban: false

  tasks:
    - name: Run All Security Checks
      block:
        # OS Check
        - name: Check OS Type
          set_fact:
            checks: "{{ checks | combine({'os_check': true}) }}"
          when: ansible_distribution in ['Ubuntu', 'Debian']

        # Dependencies Check
        - name: Check Required Dependencies
          command: which {{ item }}
          register: dep_check
          loop: [curl, jq]
          changed_when: false
          failed_when: false

        - name: Set Dependencies Status
          set_fact:
            checks: "{{ checks | combine({'dependencies': true}) }}"
          when: "dep_check.results | map(attribute='rc') | list | unique == [0]"

        # UFW Check
        - name: Check UFW Status
          shell: |
            ufw status verbose | grep -E "Status: active|Default: deny \(incoming\)"
          register: ufw_check
          changed_when: false
          failed_when: false

        - name: Set UFW Status
          set_fact:
            checks: "{{ checks | combine({'ufw': true}) }}"
          when:
            - "'Status: active' in (ufw_check.stdout | default(''))"
            - "'Default: deny (incoming)' in (ufw_check.stdout | default(''))"

        # SSH Check
        - name: Check SSH Config
          shell: |
            grep -E "^PasswordAuthentication no|^PermitRootLogin no|^KbdInteractiveAuthentication no|^UsePAM yes" /etc/ssh/sshd_config | wc -l
          register: ssh_check
          changed_when: false
          failed_when: false

        - name: Set SSH Status
          set_fact:
            checks: "{{ checks | combine({'ssh': true}) }}"
          when: "ssh_check.stdout | int >= 4"

        # Non-Root User Check
        - name: Check Non-Root Sudo Users
          shell: |
            getent group sudo | cut -d: -f4 | grep -v '^root$' | grep -v '^$'
          register: sudo_check
          changed_when: false
          failed_when: false

        - name: Set Non-Root Status
          set_fact:
            checks: "{{ checks | combine({'non_root': true}) }}"
          when: sudo_check.stdout != ""

        # Unattended Upgrades Check
        - name: Check Unattended Upgrades
          shell: |
            systemctl is-active unattended-upgrades && 
            grep -E "^APT::Periodic::(Update-Package-Lists|Unattended-Upgrade) \"1\";" /etc/apt/apt.conf.d/20auto-upgrades | wc -l
          register: upgrades_check
          changed_when: false
          failed_when: false

        - name: Set Upgrades Status
          set_fact:
            checks: "{{ checks | combine({'upgrades': true}) }}"
          when:
            - "'active' in (upgrades_check.stdout_lines[0] | default(''))"
            - "upgrades_check.stdout_lines[-1] | int >= 2"

        # Fail2ban Check
        - name: Check Fail2ban
          shell: |
            systemctl is-active fail2ban && test -f /etc/fail2ban/jail.local
          register: fail2ban_check
          changed_when: false
          failed_when: false

        - name: Set Fail2ban Status
          set_fact:
            checks: "{{ checks | combine({'fail2ban': true}) }}"
          when: fail2ban_check.rc == 0

      always:
        - name: Display Security Audit Results
          debug:
            msg: |
              Security Audit Results for {{ inventory_hostname }}:
              =========================================
              OS Check:              {{ '[32mPASS[0m' if checks.os_check else '[31mFAIL[0m' }}
              Dependencies:          {{ '[32mPASS[0m' if checks.dependencies else '[31mFAIL[0m' }}
              UFW Config:           {{ '[32mPASS[0m' if checks.ufw else '[31mFAIL[0m' }}
              SSH Security:         {{ '[32mPASS[0m' if checks.ssh else '[31mFAIL[0m' }}
              Non-Root User:        {{ '[32mPASS[0m' if checks.non_root else '[31mFAIL[0m' }}
              Unattended Upgrades:  {{ '[32mPASS[0m' if checks.upgrades else '[31mFAIL[0m' }}
              Fail2ban:             {{ '[32mPASS[0m' if checks.fail2ban else '[31mFAIL[0m' }}
              =========================================
              Overall Status:        {{ '[32mPASS[0m' if (checks.values() | list | unique == [true]) else '[31mFAIL[0m' }}